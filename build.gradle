plugins {
    id 'java'
    id 'org.gradle.test-retry' version '1.5.8'
}

group = 'com.FiveDollaGobby'
version = '1.3.1'

repositories {
    mavenCentral()
    maven {
        name = 'papermc-repo'
        url = 'https://repo.papermc.io/repository/maven-public/'
    }
    maven {
        name = 'sonatype'
        url = 'https://oss.sonatype.org/content/groups/public/'
    }
    maven {
        name = 'placeholderapi'
        url = 'https://repo.extendedclip.com/content/repositories/placeholderapi/'
    }
}

dependencies {
    compileOnly 'io.papermc.paper:paper-api:1.21.4-R0.1-SNAPSHOT'

    // bStats for metrics (optional - made compileOnly to avoid hard dependency)
    compileOnly 'org.bstats:bstats-bukkit:3.0.2'
    
    // PlaceholderAPI support (optional)
    compileOnly 'me.clip:placeholderapi:2.11.6'
    
    // Testing dependencies
    testImplementation 'org.junit.jupiter:junit-jupiter:5.10.0'
    testImplementation 'org.mockito:mockito-core:5.5.0'
    testImplementation 'org.mockito:mockito-junit-jupiter:5.5.0'
    testImplementation 'io.papermc.paper:paper-api:1.21.4-R0.1-SNAPSHOT'
    // MockBukkit removed - using manual mocking instead
}

def targetJavaVersion = 21
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

// Ensure test source sets are properly configured
sourceSets {
    test {
        java {
            srcDirs = ['src/test/java']
        }
        resources {
            srcDirs = ['src/test/resources']
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

// Simple jar task configuration
jar {
    archiveFileName = "WelcomeMessages-${version}.jar"
    destinationDirectory = file("$buildDir/libs")

    manifest {
        attributes(
                'Main-Class': 'com.FiveDollaGobby.WelcomeMessages.WelcomePlugin'
        )
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

build {
    dependsOn jar
}

// Task for copying to test server (optional)
task copyToServer(type: Copy) {
    from jar
    into '../test-server/plugins'
}

// Task for generating Javadocs
javadoc {
    options.encoding = 'UTF-8'
    options.addStringOption('Xdoclint:none', '-quiet')
}

// Test configuration
test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
        exceptionFormat "full"
    }
    // Ensure test classes are on the classpath
    classpath = sourceSets.test.runtimeClasspath
}

// Clean build directory
clean {
    delete fileTree(dir: buildDir)
}